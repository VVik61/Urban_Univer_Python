# исходные данные
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

# результат - список, содержащий только простые числа
primes = []

# результат - список, содержащий числа, которые не являются простыми, т.е. - это составные числа
not_primes = []

""" СПРАВОЧНО:
Простое число - это натуральное число больше 1, у которого есть всего два делителя: единица и само число.
Чтобы определить простое число, нужно попробовать поделить его на любое другое число, кроме единицы и его самого.
Если все числа вышли с остатком, значит, число простое.
"""

"""
Из условий домашнего задания выполнения доп. действий не требуется, но для более универсальной работы можно выполнить
 следующее: 
Для того, чтобы в цикле выбора значений из списка каждый раз не сравнивать элемент списка с заведомо неверными данными:
- с 1 (1 не является ни простым, ни составным числом), 
- отрицательными целыми числами,
- не числами      
необходимо удалить эти элементы из списка.

Прим. Не удалось удалить из списка элементы с логическим типом (bool) - уточнить у преподавателя, как это можно сделать 
"""
for i in range(len(numbers)):
    if i < len(numbers):
        if isinstance(numbers[i], int):  # проверка на то, является ли элемент целым числом
            if numbers[i] <= 1:
                numbers.remove(numbers[i])
        else:
            numbers.remove(numbers[i])
    else:
        break
# print(numbers)

""" 
В интернете найден код для проверки является ли число простым или составным. 
   
a = int(input("Введите число: "))
k = 0
for i in range(2, a // 2 + 1):
    if (a % i == 0):
        k += 1
if k <= 0:
    print("число простое")
else:
    print("число составное")
    
Прим. На числах 0 и 1 это код некорректен,
 но, т.к. эти числа исключены на предыдущем этапе, то можно найденый код адаптировать к заданию.  
"""

for i in range(len(numbers)):
    k = 0
    for j in range(2, numbers[i] // 2 + 1):
        if (numbers[i] % j == 0):
            k += 1
    if k <= 0:
        # print(numbers[i], " число простое")
        primes.append(numbers[i])
    else:
        # print(numbers[i], "число составное")
        not_primes.append(numbers[i])

print("Исходный список.                     numbers:", numbers)
print("Список, содержащий простые числа.    Primes:", primes)
print("Список, содержащий составные числа.  Not Primes:", not_primes)
