# -*- coding: utf-8 -*-
"""
Цель: научиться создавать классы наследованные от класса Thread.
Задача "За честь и отвагу!":
Создайте класс Knight, наследованный от Thread, объекты которого будут
 обладать следующими свойствами:
Атрибут name - имя рыцаря. (str)
Атрибут power - сила рыцаря. (int)
А также метод run, в котором рыцарь будет сражаться с врагами:

При запуске потока должна выводится надпись "<Имя рыцаря>, на нас напали!".
Рыцарь сражается до тех пор, пока не повергнет всех врагов
 (у всех потоков их 100).

??? НЕПОНЯТНО на каждый поток 100 или общее количество врагов = 100????

В процессе сражения количество врагов уменьшается на power текущего рыцаря.
По прошествию 1 дня сражения (1 секунды) выводится
 строка "<Имя рыцаря> сражается <кол-во дней>..., осталось <кол-во воинов> воинов."
После победы над всеми врагами выводится надпись
  "<Имя рыцаря> одержал победу спустя <кол-во дней> дней(дня)!"
Как можно заметить нужно сделать задержку в 1 секунду,
 инструменты для задержки выберите сами.

Пункты задачи:
Создайте класс Knight с соответствующими описанию свойствами.
Создайте и запустите 2 потока на основе класса Knight.
Выведите на экран строку об окончании битв.
"""

# Импорт необходимых модулей и функций
from threading import Thread
from time import sleep

class Knight(Thread):
    def __init__(self, name, power):
        self.kni_name = name
        self.power = power
        super().__init__()

    def run(self):
        print(f'\n{self.kni_name}, на нас напали!', end='')
        day = 0  # Дней сражения
        count_vrag = 100 # Количество врагов
        while count_vrag > 0:
            sleep(1)
            day += 1
            count_vrag -= self.power
            if count_vrag < 0:
                count_vrag = 0
            print(f'\n{self.kni_name} сражается {day} суток, осталось'
                  f' {count_vrag} воинов.', end='')
        print(f'\n{self.kni_name} одержал победу спустя {day} дней(я)!',
              end='')

first_knight = Knight('Sir Lancelot', 10)
second_knight = Knight("Sir Galahad", 20)

try:
    first_knight.start()
    second_knight.start()
    try:
        first_knight.join()
        second_knight.join()
    except:
        print('Ошибка! Поток не остановлен')
except:
    print('Ошибка! Поток не запустился')
print('\nВсе битвы закончились!', end='')